#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobFjib_Empty
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbjob")]
	public partial class jobContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCandidat(Candidat instance);
    partial void UpdateCandidat(Candidat instance);
    partial void DeleteCandidat(Candidat instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    partial void InsertCandidatDiplom(CandidatDiplom instance);
    partial void UpdateCandidatDiplom(CandidatDiplom instance);
    partial void DeleteCandidatDiplom(CandidatDiplom instance);
    partial void InsertContrat(Contrat instance);
    partial void UpdateContrat(Contrat instance);
    partial void DeleteContrat(Contrat instance);
    partial void InsertDiplome(Diplome instance);
    partial void UpdateDiplome(Diplome instance);
    partial void DeleteDiplome(Diplome instance);
    partial void InsertDomaine(Domaine instance);
    partial void UpdateDomaine(Domaine instance);
    partial void DeleteDomaine(Domaine instance);
    partial void InsertEmploi(Emploi instance);
    partial void UpdateEmploi(Emploi instance);
    partial void DeleteEmploi(Emploi instance);
    partial void InsertEntreprise(Entreprise instance);
    partial void UpdateEntreprise(Entreprise instance);
    partial void DeleteEntreprise(Entreprise instance);
    partial void InsertNiveauEtude(NiveauEtude instance);
    partial void UpdateNiveauEtude(NiveauEtude instance);
    partial void DeleteNiveauEtude(NiveauEtude instance);
    partial void InsertProfession(Profession instance);
    partial void UpdateProfession(Profession instance);
    partial void DeleteProfession(Profession instance);
    partial void InsertRecrute(Recrute instance);
    partial void UpdateRecrute(Recrute instance);
    partial void DeleteRecrute(Recrute instance);
    #endregion
		
		public jobContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbjobConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public jobContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public jobContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public jobContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public jobContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Candidat> Candidats
		{
			get
			{
				return this.GetTable<Candidat>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateurs
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<CandidatDiplom> CandidatDiploms
		{
			get
			{
				return this.GetTable<CandidatDiplom>();
			}
		}
		
		public System.Data.Linq.Table<Contrat> Contrats
		{
			get
			{
				return this.GetTable<Contrat>();
			}
		}
		
		public System.Data.Linq.Table<Diplome> Diplomes
		{
			get
			{
				return this.GetTable<Diplome>();
			}
		}
		
		public System.Data.Linq.Table<Domaine> Domaines
		{
			get
			{
				return this.GetTable<Domaine>();
			}
		}
		
		public System.Data.Linq.Table<Emploi> Emplois
		{
			get
			{
				return this.GetTable<Emploi>();
			}
		}
		
		public System.Data.Linq.Table<Entreprise> Entreprises
		{
			get
			{
				return this.GetTable<Entreprise>();
			}
		}
		
		public System.Data.Linq.Table<NiveauEtude> NiveauEtudes
		{
			get
			{
				return this.GetTable<NiveauEtude>();
			}
		}
		
		public System.Data.Linq.Table<Profession> Professions
		{
			get
			{
				return this.GetTable<Profession>();
			}
		}
		
		public System.Data.Linq.Table<Recrute> Recrutes
		{
			get
			{
				return this.GetTable<Recrute>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidat")]
	public partial class Candidat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _candidatId;
		
		private string _nom;
		
		private string _prenom;
		
		private System.Nullable<System.DateTime> _dateNaissance;
		
		private string _genre;
		
		private string _ville;
		
		private string _tel;
		
		private System.Nullable<int> _experience;
		
		private string _photo;
		
		private string _cv;
		
		private string _profil;
		
		private string _Profession;
		
		private System.Nullable<int> _NiveauEtude_IdNiveau;
		
		private EntitySet<CandidatDiplom> _CandidatDiploms;
		
		private EntitySet<Recrute> _Recrutes;
		
		private EntityRef<NiveauEtude> _NiveauEtude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncandidatIdChanging(int value);
    partial void OncandidatIdChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OndateNaissanceChanging(System.Nullable<System.DateTime> value);
    partial void OndateNaissanceChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnexperienceChanging(System.Nullable<int> value);
    partial void OnexperienceChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OncvChanging(string value);
    partial void OncvChanged();
    partial void OnprofilChanging(string value);
    partial void OnprofilChanged();
    partial void OnProfessionChanging(string value);
    partial void OnProfessionChanged();
    partial void OnNiveauEtude_IdNiveauChanging(System.Nullable<int> value);
    partial void OnNiveauEtude_IdNiveauChanged();
    #endregion
		
		public Candidat()
		{
			this._CandidatDiploms = new EntitySet<CandidatDiplom>(new Action<CandidatDiplom>(this.attach_CandidatDiploms), new Action<CandidatDiplom>(this.detach_CandidatDiploms));
			this._Recrutes = new EntitySet<Recrute>(new Action<Recrute>(this.attach_Recrutes), new Action<Recrute>(this.detach_Recrutes));
			this._NiveauEtude = default(EntityRef<NiveauEtude>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidatId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int candidatId
		{
			get
			{
				return this._candidatId;
			}
			set
			{
				if ((this._candidatId != value))
				{
					this.OncandidatIdChanging(value);
					this.SendPropertyChanging();
					this._candidatId = value;
					this.SendPropertyChanged("candidatId");
					this.OncandidatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(MAX)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(MAX)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaissance", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateNaissance
		{
			get
			{
				return this._dateNaissance;
			}
			set
			{
				if ((this._dateNaissance != value))
				{
					this.OndateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._dateNaissance = value;
					this.SendPropertyChanged("dateNaissance");
					this.OndateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="NVarChar(MAX)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="NVarChar(MAX)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="VarChar(30)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_experience", DbType="Int")]
		public System.Nullable<int> experience
		{
			get
			{
				return this._experience;
			}
			set
			{
				if ((this._experience != value))
				{
					this.OnexperienceChanging(value);
					this.SendPropertyChanging();
					this._experience = value;
					this.SendPropertyChanged("experience");
					this.OnexperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NVarChar(MAX)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cv", DbType="NVarChar(MAX)")]
		public string cv
		{
			get
			{
				return this._cv;
			}
			set
			{
				if ((this._cv != value))
				{
					this.OncvChanging(value);
					this.SendPropertyChanging();
					this._cv = value;
					this.SendPropertyChanged("cv");
					this.OncvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profil", DbType="NVarChar(MAX)")]
		public string profil
		{
			get
			{
				return this._profil;
			}
			set
			{
				if ((this._profil != value))
				{
					this.OnprofilChanging(value);
					this.SendPropertyChanging();
					this._profil = value;
					this.SendPropertyChanged("profil");
					this.OnprofilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profession", DbType="NVarChar(MAX)")]
		public string Profession
		{
			get
			{
				return this._Profession;
			}
			set
			{
				if ((this._Profession != value))
				{
					this.OnProfessionChanging(value);
					this.SendPropertyChanging();
					this._Profession = value;
					this.SendPropertyChanged("Profession");
					this.OnProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NiveauEtude_IdNiveau", DbType="Int")]
		public System.Nullable<int> NiveauEtude_IdNiveau
		{
			get
			{
				return this._NiveauEtude_IdNiveau;
			}
			set
			{
				if ((this._NiveauEtude_IdNiveau != value))
				{
					if (this._NiveauEtude.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNiveauEtude_IdNiveauChanging(value);
					this.SendPropertyChanging();
					this._NiveauEtude_IdNiveau = value;
					this.SendPropertyChanged("NiveauEtude_IdNiveau");
					this.OnNiveauEtude_IdNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_CandidatDiplom", Storage="_CandidatDiploms", ThisKey="candidatId", OtherKey="IdCandidat")]
		public EntitySet<CandidatDiplom> CandidatDiploms
		{
			get
			{
				return this._CandidatDiploms;
			}
			set
			{
				this._CandidatDiploms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_Recrute", Storage="_Recrutes", ThisKey="candidatId", OtherKey="Candidat_candidatId")]
		public EntitySet<Recrute> Recrutes
		{
			get
			{
				return this._Recrutes;
			}
			set
			{
				this._Recrutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Candidat", Storage="_NiveauEtude", ThisKey="NiveauEtude_IdNiveau", OtherKey="IdNiveau", IsForeignKey=true)]
		public NiveauEtude NiveauEtude
		{
			get
			{
				return this._NiveauEtude.Entity;
			}
			set
			{
				NiveauEtude previousValue = this._NiveauEtude.Entity;
				if (((previousValue != value) 
							|| (this._NiveauEtude.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NiveauEtude.Entity = null;
						previousValue.Candidats.Remove(this);
					}
					this._NiveauEtude.Entity = value;
					if ((value != null))
					{
						value.Candidats.Add(this);
						this._NiveauEtude_IdNiveau = value.IdNiveau;
					}
					else
					{
						this._NiveauEtude_IdNiveau = default(Nullable<int>);
					}
					this.SendPropertyChanged("NiveauEtude");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatDiploms(CandidatDiplom entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = this;
		}
		
		private void detach_CandidatDiploms(CandidatDiplom entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = null;
		}
		
		private void attach_Recrutes(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = this;
		}
		
		private void detach_Recrutes(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUser;
		
		private string _email;
		
		private string _mdp;
		
		private string _typeUser;
		
		private System.Nullable<System.DateTime> _dernierVisite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OntypeUserChanging(string value);
    partial void OntypeUserChanged();
    partial void OndernierVisiteChanging(System.Nullable<System.DateTime> value);
    partial void OndernierVisiteChanged();
    #endregion
		
		public Utilisateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="VarChar(MAX)")]
		public string mdp
		{
			get
			{
				return this._mdp;
			}
			set
			{
				if ((this._mdp != value))
				{
					this.OnmdpChanging(value);
					this.SendPropertyChanging();
					this._mdp = value;
					this.SendPropertyChanged("mdp");
					this.OnmdpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeUser", DbType="VarChar(20)")]
		public string typeUser
		{
			get
			{
				return this._typeUser;
			}
			set
			{
				if ((this._typeUser != value))
				{
					this.OntypeUserChanging(value);
					this.SendPropertyChanging();
					this._typeUser = value;
					this.SendPropertyChanged("typeUser");
					this.OntypeUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dernierVisite", DbType="DateTime")]
		public System.Nullable<System.DateTime> dernierVisite
		{
			get
			{
				return this._dernierVisite;
			}
			set
			{
				if ((this._dernierVisite != value))
				{
					this.OndernierVisiteChanging(value);
					this.SendPropertyChanging();
					this._dernierVisite = value;
					this.SendPropertyChanged("dernierVisite");
					this.OndernierVisiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidatDiploms")]
	public partial class CandidatDiplom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCandidat;
		
		private int _idDiplome;
		
		private EntityRef<Candidat> _Candidat;
		
		private EntityRef<Diplome> _Diplome;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCandidatChanging(int value);
    partial void OnIdCandidatChanged();
    partial void OnidDiplomeChanging(int value);
    partial void OnidDiplomeChanged();
    #endregion
		
		public CandidatDiplom()
		{
			this._Candidat = default(EntityRef<Candidat>);
			this._Diplome = default(EntityRef<Diplome>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCandidat", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCandidat
		{
			get
			{
				return this._IdCandidat;
			}
			set
			{
				if ((this._IdCandidat != value))
				{
					if (this._Candidat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCandidatChanging(value);
					this.SendPropertyChanging();
					this._IdCandidat = value;
					this.SendPropertyChanged("IdCandidat");
					this.OnIdCandidatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDiplome", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDiplome
		{
			get
			{
				return this._idDiplome;
			}
			set
			{
				if ((this._idDiplome != value))
				{
					if (this._Diplome.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDiplomeChanging(value);
					this.SendPropertyChanging();
					this._idDiplome = value;
					this.SendPropertyChanged("idDiplome");
					this.OnidDiplomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_CandidatDiplom", Storage="_Candidat", ThisKey="IdCandidat", OtherKey="candidatId", IsForeignKey=true)]
		public Candidat Candidat
		{
			get
			{
				return this._Candidat.Entity;
			}
			set
			{
				Candidat previousValue = this._Candidat.Entity;
				if (((previousValue != value) 
							|| (this._Candidat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidat.Entity = null;
						previousValue.CandidatDiploms.Remove(this);
					}
					this._Candidat.Entity = value;
					if ((value != null))
					{
						value.CandidatDiploms.Add(this);
						this._IdCandidat = value.candidatId;
					}
					else
					{
						this._IdCandidat = default(int);
					}
					this.SendPropertyChanged("Candidat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diplome_CandidatDiplom", Storage="_Diplome", ThisKey="idDiplome", OtherKey="IdDiplome", IsForeignKey=true)]
		public Diplome Diplome
		{
			get
			{
				return this._Diplome.Entity;
			}
			set
			{
				Diplome previousValue = this._Diplome.Entity;
				if (((previousValue != value) 
							|| (this._Diplome.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diplome.Entity = null;
						previousValue.CandidatDiploms.Remove(this);
					}
					this._Diplome.Entity = value;
					if ((value != null))
					{
						value.CandidatDiploms.Add(this);
						this._idDiplome = value.IdDiplome;
					}
					else
					{
						this._idDiplome = default(int);
					}
					this.SendPropertyChanged("Diplome");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contrat")]
	public partial class Contrat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdContrat;
		
		private string _designation;
		
		private EntitySet<Emploi> _Emplois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratChanging(int value);
    partial void OnIdContratChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    #endregion
		
		public Contrat()
		{
			this._Emplois = new EntitySet<Emploi>(new Action<Emploi>(this.attach_Emplois), new Action<Emploi>(this.detach_Emplois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdContrat
		{
			get
			{
				return this._IdContrat;
			}
			set
			{
				if ((this._IdContrat != value))
				{
					this.OnIdContratChanging(value);
					this.SendPropertyChanging();
					this._IdContrat = value;
					this.SendPropertyChanged("IdContrat");
					this.OnIdContratChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(MAX)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrat_Emploi", Storage="_Emplois", ThisKey="IdContrat", OtherKey="IdContrat")]
		public EntitySet<Emploi> Emplois
		{
			get
			{
				return this._Emplois;
			}
			set
			{
				this._Emplois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Contrat = this;
		}
		
		private void detach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Contrat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diplome")]
	public partial class Diplome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDiplome;
		
		private string _Designation;
		
		private EntitySet<CandidatDiplom> _CandidatDiploms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDiplomeChanging(int value);
    partial void OnIdDiplomeChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public Diplome()
		{
			this._CandidatDiploms = new EntitySet<CandidatDiplom>(new Action<CandidatDiplom>(this.attach_CandidatDiploms), new Action<CandidatDiplom>(this.detach_CandidatDiploms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiplome", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDiplome
		{
			get
			{
				return this._IdDiplome;
			}
			set
			{
				if ((this._IdDiplome != value))
				{
					this.OnIdDiplomeChanging(value);
					this.SendPropertyChanging();
					this._IdDiplome = value;
					this.SendPropertyChanged("IdDiplome");
					this.OnIdDiplomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diplome_CandidatDiplom", Storage="_CandidatDiploms", ThisKey="IdDiplome", OtherKey="idDiplome")]
		public EntitySet<CandidatDiplom> CandidatDiploms
		{
			get
			{
				return this._CandidatDiploms;
			}
			set
			{
				this._CandidatDiploms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidatDiploms(CandidatDiplom entity)
		{
			this.SendPropertyChanging();
			entity.Diplome = this;
		}
		
		private void detach_CandidatDiploms(CandidatDiplom entity)
		{
			this.SendPropertyChanging();
			entity.Diplome = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Domaine")]
	public partial class Domaine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDomaine;
		
		private string _Designation;
		
		private EntitySet<Profession> _Professions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDomaineChanging(int value);
    partial void OnIdDomaineChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public Domaine()
		{
			this._Professions = new EntitySet<Profession>(new Action<Profession>(this.attach_Professions), new Action<Profession>(this.detach_Professions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomaine", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDomaine
		{
			get
			{
				return this._IdDomaine;
			}
			set
			{
				if ((this._IdDomaine != value))
				{
					this.OnIdDomaineChanging(value);
					this.SendPropertyChanging();
					this._IdDomaine = value;
					this.SendPropertyChanged("IdDomaine");
					this.OnIdDomaineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domaine_Profession", Storage="_Professions", ThisKey="IdDomaine", OtherKey="IdDomaine")]
		public EntitySet<Profession> Professions
		{
			get
			{
				return this._Professions;
			}
			set
			{
				this._Professions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Professions(Profession entity)
		{
			this.SendPropertyChanging();
			entity.Domaine = this;
		}
		
		private void detach_Professions(Profession entity)
		{
			this.SendPropertyChanging();
			entity.Domaine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emploi")]
	public partial class Emploi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmploi;
		
		private string _titre;
		
		private string _descrip;
		
		private System.DateTime _dateCreation;
		
		private string _domain;
		
		private bool _emploiEtat;
		
		private string _ville;
		
		private int _nbPostes;
		
		private System.DateTime _dateEcheance;
		
		private int _IdContrat;
		
		private System.Nullable<int> _IdProfession;
		
		private System.Nullable<double> _Salaire;
		
		private int _idEntreprise;
		
		private EntitySet<Recrute> _Recrutes;
		
		private EntityRef<Contrat> _Contrat;
		
		private EntityRef<Entreprise> _Entreprise;
		
		private EntityRef<Profession> _Profession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmploiChanging(int value);
    partial void OnidEmploiChanged();
    partial void OntitreChanging(string value);
    partial void OntitreChanged();
    partial void OndescripChanging(string value);
    partial void OndescripChanged();
    partial void OndateCreationChanging(System.DateTime value);
    partial void OndateCreationChanged();
    partial void OndomainChanging(string value);
    partial void OndomainChanged();
    partial void OnemploiEtatChanging(bool value);
    partial void OnemploiEtatChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OnnbPostesChanging(int value);
    partial void OnnbPostesChanged();
    partial void OndateEcheanceChanging(System.DateTime value);
    partial void OndateEcheanceChanged();
    partial void OnIdContratChanging(int value);
    partial void OnIdContratChanged();
    partial void OnIdProfessionChanging(System.Nullable<int> value);
    partial void OnIdProfessionChanged();
    partial void OnSalaireChanging(System.Nullable<double> value);
    partial void OnSalaireChanged();
    partial void OnidEntrepriseChanging(int value);
    partial void OnidEntrepriseChanged();
    #endregion
		
		public Emploi()
		{
			this._Recrutes = new EntitySet<Recrute>(new Action<Recrute>(this.attach_Recrutes), new Action<Recrute>(this.detach_Recrutes));
			this._Contrat = default(EntityRef<Contrat>);
			this._Entreprise = default(EntityRef<Entreprise>);
			this._Profession = default(EntityRef<Profession>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmploi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmploi
		{
			get
			{
				return this._idEmploi;
			}
			set
			{
				if ((this._idEmploi != value))
				{
					this.OnidEmploiChanging(value);
					this.SendPropertyChanging();
					this._idEmploi = value;
					this.SendPropertyChanged("idEmploi");
					this.OnidEmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre", DbType="NVarChar(MAX)")]
		public string titre
		{
			get
			{
				return this._titre;
			}
			set
			{
				if ((this._titre != value))
				{
					this.OntitreChanging(value);
					this.SendPropertyChanging();
					this._titre = value;
					this.SendPropertyChanged("titre");
					this.OntitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrip", DbType="NVarChar(MAX)")]
		public string descrip
		{
			get
			{
				return this._descrip;
			}
			set
			{
				if ((this._descrip != value))
				{
					this.OndescripChanging(value);
					this.SendPropertyChanging();
					this._descrip = value;
					this.SendPropertyChanged("descrip");
					this.OndescripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreation
		{
			get
			{
				return this._dateCreation;
			}
			set
			{
				if ((this._dateCreation != value))
				{
					this.OndateCreationChanging(value);
					this.SendPropertyChanging();
					this._dateCreation = value;
					this.SendPropertyChanged("dateCreation");
					this.OndateCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domain", DbType="NVarChar(MAX)")]
		public string domain
		{
			get
			{
				return this._domain;
			}
			set
			{
				if ((this._domain != value))
				{
					this.OndomainChanging(value);
					this.SendPropertyChanging();
					this._domain = value;
					this.SendPropertyChanged("domain");
					this.OndomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emploiEtat", DbType="Bit NOT NULL")]
		public bool emploiEtat
		{
			get
			{
				return this._emploiEtat;
			}
			set
			{
				if ((this._emploiEtat != value))
				{
					this.OnemploiEtatChanging(value);
					this.SendPropertyChanging();
					this._emploiEtat = value;
					this.SendPropertyChanged("emploiEtat");
					this.OnemploiEtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="NVarChar(MAX)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbPostes", DbType="Int NOT NULL")]
		public int nbPostes
		{
			get
			{
				return this._nbPostes;
			}
			set
			{
				if ((this._nbPostes != value))
				{
					this.OnnbPostesChanging(value);
					this.SendPropertyChanging();
					this._nbPostes = value;
					this.SendPropertyChanged("nbPostes");
					this.OnnbPostesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEcheance", DbType="DateTime NOT NULL")]
		public System.DateTime dateEcheance
		{
			get
			{
				return this._dateEcheance;
			}
			set
			{
				if ((this._dateEcheance != value))
				{
					this.OndateEcheanceChanging(value);
					this.SendPropertyChanging();
					this._dateEcheance = value;
					this.SendPropertyChanged("dateEcheance");
					this.OndateEcheanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrat", DbType="Int NOT NULL")]
		public int IdContrat
		{
			get
			{
				return this._IdContrat;
			}
			set
			{
				if ((this._IdContrat != value))
				{
					if (this._Contrat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdContratChanging(value);
					this.SendPropertyChanging();
					this._IdContrat = value;
					this.SendPropertyChanged("IdContrat");
					this.OnIdContratChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfession", DbType="Int")]
		public System.Nullable<int> IdProfession
		{
			get
			{
				return this._IdProfession;
			}
			set
			{
				if ((this._IdProfession != value))
				{
					if (this._Profession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProfessionChanging(value);
					this.SendPropertyChanging();
					this._IdProfession = value;
					this.SendPropertyChanged("IdProfession");
					this.OnIdProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salaire", DbType="Float")]
		public System.Nullable<double> Salaire
		{
			get
			{
				return this._Salaire;
			}
			set
			{
				if ((this._Salaire != value))
				{
					this.OnSalaireChanging(value);
					this.SendPropertyChanging();
					this._Salaire = value;
					this.SendPropertyChanged("Salaire");
					this.OnSalaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEntreprise", DbType="Int NOT NULL")]
		public int idEntreprise
		{
			get
			{
				return this._idEntreprise;
			}
			set
			{
				if ((this._idEntreprise != value))
				{
					if (this._Entreprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEntrepriseChanging(value);
					this.SendPropertyChanging();
					this._idEntreprise = value;
					this.SendPropertyChanged("idEntreprise");
					this.OnidEntrepriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emploi_Recrute", Storage="_Recrutes", ThisKey="idEmploi", OtherKey="Emploi_idEmploi")]
		public EntitySet<Recrute> Recrutes
		{
			get
			{
				return this._Recrutes;
			}
			set
			{
				this._Recrutes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrat_Emploi", Storage="_Contrat", ThisKey="IdContrat", OtherKey="IdContrat", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contrat Contrat
		{
			get
			{
				return this._Contrat.Entity;
			}
			set
			{
				Contrat previousValue = this._Contrat.Entity;
				if (((previousValue != value) 
							|| (this._Contrat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contrat.Entity = null;
						previousValue.Emplois.Remove(this);
					}
					this._Contrat.Entity = value;
					if ((value != null))
					{
						value.Emplois.Add(this);
						this._IdContrat = value.IdContrat;
					}
					else
					{
						this._IdContrat = default(int);
					}
					this.SendPropertyChanged("Contrat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entreprise_Emploi", Storage="_Entreprise", ThisKey="idEntreprise", OtherKey="idEntreprise", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Entreprise Entreprise
		{
			get
			{
				return this._Entreprise.Entity;
			}
			set
			{
				Entreprise previousValue = this._Entreprise.Entity;
				if (((previousValue != value) 
							|| (this._Entreprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entreprise.Entity = null;
						previousValue.Emplois.Remove(this);
					}
					this._Entreprise.Entity = value;
					if ((value != null))
					{
						value.Emplois.Add(this);
						this._idEntreprise = value.idEntreprise;
					}
					else
					{
						this._idEntreprise = default(int);
					}
					this.SendPropertyChanged("Entreprise");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profession_Emploi", Storage="_Profession", ThisKey="IdProfession", OtherKey="IdProfession", IsForeignKey=true)]
		public Profession Profession
		{
			get
			{
				return this._Profession.Entity;
			}
			set
			{
				Profession previousValue = this._Profession.Entity;
				if (((previousValue != value) 
							|| (this._Profession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profession.Entity = null;
						previousValue.Emplois.Remove(this);
					}
					this._Profession.Entity = value;
					if ((value != null))
					{
						value.Emplois.Add(this);
						this._IdProfession = value.IdProfession;
					}
					else
					{
						this._IdProfession = default(Nullable<int>);
					}
					this.SendPropertyChanged("Profession");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recrutes(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Emploi = this;
		}
		
		private void detach_Recrutes(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Emploi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entreprise")]
	public partial class Entreprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEntreprise;
		
		private string _nom;
		
		private string _logo;
		
		private string _ville;
		
		private string _adresse;
		
		private System.Nullable<System.DateTime> _anneeCreation;
		
		private string _description;
		
		private EntitySet<Emploi> _Emplois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEntrepriseChanging(int value);
    partial void OnidEntrepriseChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OnanneeCreationChanging(System.Nullable<System.DateTime> value);
    partial void OnanneeCreationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Entreprise()
		{
			this._Emplois = new EntitySet<Emploi>(new Action<Emploi>(this.attach_Emplois), new Action<Emploi>(this.detach_Emplois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEntreprise", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEntreprise
		{
			get
			{
				return this._idEntreprise;
			}
			set
			{
				if ((this._idEntreprise != value))
				{
					this.OnidEntrepriseChanging(value);
					this.SendPropertyChanging();
					this._idEntreprise = value;
					this.SendPropertyChanged("idEntreprise");
					this.OnidEntrepriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(MAX)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="NVarChar(MAX)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="NVarChar(MAX)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="NVarChar(MAX)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anneeCreation", DbType="DateTime")]
		public System.Nullable<System.DateTime> anneeCreation
		{
			get
			{
				return this._anneeCreation;
			}
			set
			{
				if ((this._anneeCreation != value))
				{
					this.OnanneeCreationChanging(value);
					this.SendPropertyChanging();
					this._anneeCreation = value;
					this.SendPropertyChanged("anneeCreation");
					this.OnanneeCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entreprise_Emploi", Storage="_Emplois", ThisKey="idEntreprise", OtherKey="idEntreprise")]
		public EntitySet<Emploi> Emplois
		{
			get
			{
				return this._Emplois;
			}
			set
			{
				this._Emplois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Entreprise = this;
		}
		
		private void detach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Entreprise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NiveauEtude")]
	public partial class NiveauEtude : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNiveau;
		
		private string _designation;
		
		private EntitySet<Candidat> _Candidats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNiveauChanging(int value);
    partial void OnIdNiveauChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    #endregion
		
		public NiveauEtude()
		{
			this._Candidats = new EntitySet<Candidat>(new Action<Candidat>(this.attach_Candidats), new Action<Candidat>(this.detach_Candidats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNiveau", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNiveau
		{
			get
			{
				return this._IdNiveau;
			}
			set
			{
				if ((this._IdNiveau != value))
				{
					this.OnIdNiveauChanging(value);
					this.SendPropertyChanging();
					this._IdNiveau = value;
					this.SendPropertyChanged("IdNiveau");
					this.OnIdNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(MAX)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Candidat", Storage="_Candidats", ThisKey="IdNiveau", OtherKey="NiveauEtude_IdNiveau")]
		public EntitySet<Candidat> Candidats
		{
			get
			{
				return this._Candidats;
			}
			set
			{
				this._Candidats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidats(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = this;
		}
		
		private void detach_Candidats(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profession")]
	public partial class Profession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProfession;
		
		private string _designation;
		
		private int _IdDomaine;
		
		private EntitySet<Emploi> _Emplois;
		
		private EntityRef<Domaine> _Domaine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfessionChanging(int value);
    partial void OnIdProfessionChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnIdDomaineChanging(int value);
    partial void OnIdDomaineChanged();
    #endregion
		
		public Profession()
		{
			this._Emplois = new EntitySet<Emploi>(new Action<Emploi>(this.attach_Emplois), new Action<Emploi>(this.detach_Emplois));
			this._Domaine = default(EntityRef<Domaine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfession", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProfession
		{
			get
			{
				return this._IdProfession;
			}
			set
			{
				if ((this._IdProfession != value))
				{
					this.OnIdProfessionChanging(value);
					this.SendPropertyChanging();
					this._IdProfession = value;
					this.SendPropertyChanged("IdProfession");
					this.OnIdProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(MAX)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomaine", DbType="Int NOT NULL")]
		public int IdDomaine
		{
			get
			{
				return this._IdDomaine;
			}
			set
			{
				if ((this._IdDomaine != value))
				{
					if (this._Domaine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDomaineChanging(value);
					this.SendPropertyChanging();
					this._IdDomaine = value;
					this.SendPropertyChanged("IdDomaine");
					this.OnIdDomaineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profession_Emploi", Storage="_Emplois", ThisKey="IdProfession", OtherKey="IdProfession")]
		public EntitySet<Emploi> Emplois
		{
			get
			{
				return this._Emplois;
			}
			set
			{
				this._Emplois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domaine_Profession", Storage="_Domaine", ThisKey="IdDomaine", OtherKey="IdDomaine", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domaine Domaine
		{
			get
			{
				return this._Domaine.Entity;
			}
			set
			{
				Domaine previousValue = this._Domaine.Entity;
				if (((previousValue != value) 
							|| (this._Domaine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domaine.Entity = null;
						previousValue.Professions.Remove(this);
					}
					this._Domaine.Entity = value;
					if ((value != null))
					{
						value.Professions.Add(this);
						this._IdDomaine = value.IdDomaine;
					}
					else
					{
						this._IdDomaine = default(int);
					}
					this.SendPropertyChanged("Domaine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Profession = this;
		}
		
		private void detach_Emplois(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Profession = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recrute")]
	public partial class Recrute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecruteId;
		
		private System.DateTime _date;
		
		private int _Candidat_candidatId;
		
		private string _Categorie;
		
		private System.Nullable<int> _Emploi_idEmploi;
		
		private string _lettreMtv;
		
		private EntityRef<Candidat> _Candidat;
		
		private EntityRef<Emploi> _Emploi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecruteIdChanging(int value);
    partial void OnRecruteIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnCandidat_candidatIdChanging(int value);
    partial void OnCandidat_candidatIdChanged();
    partial void OnCategorieChanging(string value);
    partial void OnCategorieChanged();
    partial void OnEmploi_idEmploiChanging(System.Nullable<int> value);
    partial void OnEmploi_idEmploiChanged();
    partial void OnlettreMtvChanging(string value);
    partial void OnlettreMtvChanged();
    #endregion
		
		public Recrute()
		{
			this._Candidat = default(EntityRef<Candidat>);
			this._Emploi = default(EntityRef<Emploi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecruteId
		{
			get
			{
				return this._RecruteId;
			}
			set
			{
				if ((this._RecruteId != value))
				{
					this.OnRecruteIdChanging(value);
					this.SendPropertyChanging();
					this._RecruteId = value;
					this.SendPropertyChanged("RecruteId");
					this.OnRecruteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidat_candidatId", DbType="Int NOT NULL")]
		public int Candidat_candidatId
		{
			get
			{
				return this._Candidat_candidatId;
			}
			set
			{
				if ((this._Candidat_candidatId != value))
				{
					if (this._Candidat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidat_candidatIdChanging(value);
					this.SendPropertyChanging();
					this._Candidat_candidatId = value;
					this.SendPropertyChanged("Candidat_candidatId");
					this.OnCandidat_candidatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Categorie
		{
			get
			{
				return this._Categorie;
			}
			set
			{
				if ((this._Categorie != value))
				{
					this.OnCategorieChanging(value);
					this.SendPropertyChanging();
					this._Categorie = value;
					this.SendPropertyChanged("Categorie");
					this.OnCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emploi_idEmploi", DbType="Int")]
		public System.Nullable<int> Emploi_idEmploi
		{
			get
			{
				return this._Emploi_idEmploi;
			}
			set
			{
				if ((this._Emploi_idEmploi != value))
				{
					if (this._Emploi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmploi_idEmploiChanging(value);
					this.SendPropertyChanging();
					this._Emploi_idEmploi = value;
					this.SendPropertyChanged("Emploi_idEmploi");
					this.OnEmploi_idEmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lettreMtv", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string lettreMtv
		{
			get
			{
				return this._lettreMtv;
			}
			set
			{
				if ((this._lettreMtv != value))
				{
					this.OnlettreMtvChanging(value);
					this.SendPropertyChanging();
					this._lettreMtv = value;
					this.SendPropertyChanged("lettreMtv");
					this.OnlettreMtvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_Recrute", Storage="_Candidat", ThisKey="Candidat_candidatId", OtherKey="candidatId", IsForeignKey=true)]
		public Candidat Candidat
		{
			get
			{
				return this._Candidat.Entity;
			}
			set
			{
				Candidat previousValue = this._Candidat.Entity;
				if (((previousValue != value) 
							|| (this._Candidat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidat.Entity = null;
						previousValue.Recrutes.Remove(this);
					}
					this._Candidat.Entity = value;
					if ((value != null))
					{
						value.Recrutes.Add(this);
						this._Candidat_candidatId = value.candidatId;
					}
					else
					{
						this._Candidat_candidatId = default(int);
					}
					this.SendPropertyChanged("Candidat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emploi_Recrute", Storage="_Emploi", ThisKey="Emploi_idEmploi", OtherKey="idEmploi", IsForeignKey=true)]
		public Emploi Emploi
		{
			get
			{
				return this._Emploi.Entity;
			}
			set
			{
				Emploi previousValue = this._Emploi.Entity;
				if (((previousValue != value) 
							|| (this._Emploi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Emploi.Entity = null;
						previousValue.Recrutes.Remove(this);
					}
					this._Emploi.Entity = value;
					if ((value != null))
					{
						value.Recrutes.Add(this);
						this._Emploi_idEmploi = value.idEmploi;
					}
					else
					{
						this._Emploi_idEmploi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Emploi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
